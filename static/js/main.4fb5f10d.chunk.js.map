{"version":3,"sources":["components/DishOrderForm.js","components/DishOrderTableHeader.js","components/DishOrderTable.js","App.js","reportWebVitals.js","index.js"],"names":["DishOrderForm","this","props","handleSubmit","handleChangeGeneralValues","preparation_time","getPositionForType","className","style","borderRadius","onSubmit","type","name","placeholder","onChange","cursor","value","id","step","Component","DishOrderTableHeader","DishOrderTable","dishResponse","no_of_slices","diameter","spiciness_scale","slices_of_bread","App","counter","state","dishes","error","color","handleDiameter","min","max","handleForSpecifiedValues","bind","visibleOrderTable","e","target","setState","parseFloat","parseInt","preventDefault","dish","getStatesForTypes","piecesOfPizza","test","dishReqestBody","JSON","stringify","fetch","method","body","headers","Headers","then","response","status","json","showTableOrder","cancelErrorForm","res","showErrorForm","Error","catch","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4fb5f10d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"../styles/DishOrderForm.css\";\r\n\r\nclass DishOrderForm extends Component {\r\n  render() {\r\n    const {\r\n      handleSubmit,\r\n      handleChangeGeneralValues,\r\n      preparation_time,\r\n      getPositionForType,\r\n    } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"container\">\r\n          <form\r\n            style={{ borderRadius: \"10px\" }}\r\n            className=\"m-5 border bg-light mx-auto col-xl-4 col-10 offset-xl-4 offset-1\"\r\n            onSubmit={handleSubmit}\r\n          >\r\n            <h4 className=\"p-3 d-flex justify-content-center\">Dishes Form</h4>\r\n            <div className=\"form-group\">\r\n              <label className=\"label\">\r\n                <b>Name:</b>\r\n              </label>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                name=\"name\"\r\n                placeholder=\"Name of dish\"\r\n                onChange={handleChangeGeneralValues}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label className=\"label\">\r\n                <b>Preparation time:</b>\r\n              </label>\r\n\r\n              <input\r\n                style={{ cursor: \"pointer\" }}\r\n                type=\"time\"\r\n                className=\"form-control\"\r\n                name=\"preparation_time\"\r\n                value={preparation_time}\r\n                id=\"settime\"\r\n                step=\"1\"\r\n                onChange={handleChangeGeneralValues}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label className=\"label\">\r\n                <b>Type:</b>\r\n              </label>\r\n\r\n              <select\r\n                className=\"form-control\"\r\n                name=\"type\"\r\n                id=\"\"\r\n                onChange={handleChangeGeneralValues}\r\n              >\r\n                <option value=\"pizza\">pizza</option>\r\n                <option value=\"soup\">soup</option>\r\n                <option value=\"sandwich\">sandwich</option>\r\n              </select>\r\n            </div>\r\n            {getPositionForType()}\r\n            <div className=\"d-flex justify-content-center\">\r\n              <button className=\" btn btn-primary\" type=\"submit\">\r\n                Submit\r\n              </button>\r\n            </div>\r\n            <br />\r\n          </form>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DishOrderForm;\r\n","import React from \"react\";\r\n\r\nconst DishOrderTableHeader = () => {\r\n  return (\r\n    <thead className=\"thead-dark captionsHeading\">\r\n      <tr>\r\n        <th>id</th>\r\n        <th>Name</th>\r\n        <th>Preparation Time</th>\r\n        <th>Type</th>\r\n        <th>No of slices</th>\r\n        <th>Diameter</th>\r\n        <th>Spiciness scale</th>\r\n        <th>Slices of bread</th>\r\n      </tr>\r\n    </thead>\r\n  );\r\n};\r\n\r\nexport default DishOrderTableHeader;\r\n","import React, { Component } from \"react\";\r\n\r\nclass DishOrderTable extends Component {\r\n  render() {\r\n    const {\r\n      id,\r\n      name,\r\n      preparation_time,\r\n      type,\r\n      no_of_slices,\r\n      diameter,\r\n      spiciness_scale,\r\n      slices_of_bread,\r\n    } = this.props.dishResponse;\r\n\r\n    return (\r\n      <>\r\n        <tbody>\r\n          <tr>\r\n            <td>{id}</td>\r\n            <td>{name}</td>\r\n            <td>{preparation_time}</td>\r\n            <td>{type}</td>\r\n            <td>{no_of_slices}</td>\r\n            <td>{diameter}</td>\r\n            <td>{spiciness_scale}</td>\r\n            <td>{slices_of_bread}</td>\r\n          </tr>\r\n        </tbody>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DishOrderTable;\r\n","import React, { Component } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport DishOrderForm from \"./components/DishOrderForm\";\r\nimport LoginFormListHeader from \"./components/DishOrderTableHeader\";\r\nimport DishOrderTable from \"./components/DishOrderTable\";\r\nclass App extends Component {\r\n  counter = 0;\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChangeGeneralValues = this.handleChangeGeneralValues.bind(this);\r\n    this.handleForSpecifiedValues = this.handleForSpecifiedValues.bind(this);\r\n    this.handleDiameter = this.handleDiameter.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n    this.state = {\r\n      dishes: {\r\n        name: \"\",\r\n        preparation_time: \"00:00:00\",\r\n        type: \"pizza\",\r\n        no_of_slices: \"\",\r\n        diameter: 0.01,\r\n        spiciness_scale: 1,\r\n        slices_of_bread: 1,\r\n      },\r\n      error: \"\",\r\n      dishResponse: {},\r\n      visibleOrderTable: false,\r\n    };\r\n  }\r\n\r\n  handleChangeGeneralValues(e) {\r\n    const value = e.target.value;\r\n    const name = e.target.name;\r\n    let dishes = this.state.dishes;\r\n    dishes[name] = value;\r\n    this.setState({\r\n      dishes,\r\n    });\r\n    if (value === \"\") {\r\n      this.setState({\r\n        error: \"\",\r\n      });\r\n    }\r\n  }\r\n\r\n  handleDiameter(e) {\r\n    const value = parseFloat(e.target.value);\r\n    let dishes = this.state.dishes;\r\n    dishes.diameter = value;\r\n    this.setState({\r\n      dishes,\r\n    });\r\n  }\r\n\r\n  handleForSpecifiedValues(e) {\r\n    const value = parseInt(e.target.value);\r\n    const name = e.target.name;\r\n    let dishes = this.state.dishes;\r\n    dishes[name] = value;\r\n    this.setState({\r\n      dishes,\r\n    });\r\n  }\r\n\r\n  getPositionForType = () => {\r\n    switch (this.state.dishes.type) {\r\n      case \"pizza\":\r\n        return (\r\n          <>\r\n            <label className=\"label\">\r\n              <b>No of slices:</b>\r\n            </label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"no_of_slices\"\r\n              placeholder=\"No of slices\"\r\n              value={this.state.dishes.no_of_slices}\r\n              onChange={this.handleChangeGeneralValues}\r\n            />\r\n            {this.state.error ? (\r\n              <strong className=\"d-flex justify-content-center\">\r\n                <span style={{ color: \"red\" }}>{this.state.error}</span>\r\n              </strong>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            <label className=\"label\">\r\n              <b>Diameter:</b>\r\n            </label>\r\n            <div className=\"field\">\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"number\"\r\n                step=\"0.01\"\r\n                name=\"diameter\"\r\n                value={this.state.dishes.diameter}\r\n                onChange={this.handleDiameter}\r\n              />\r\n            </div>\r\n            <br />\r\n          </>\r\n        );\r\n      case \"soup\":\r\n        return (\r\n          <>\r\n            <label className=\"label\">\r\n              {\" \"}\r\n              <b>Spiciness scale:</b>\r\n            </label>\r\n\r\n            <input\r\n              className=\"progress_bar_input form-control\"\r\n              type=\"range\"\r\n              step=\"1\"\r\n              min=\"1\"\r\n              max=\"10\"\r\n              name=\"spiciness_scale\"\r\n              value={this.state.dishes.spiciness_scale}\r\n              onChange={this.handleForSpecifiedValues}\r\n            />\r\n            <p>{this.state.dishes.spiciness_scale}/10</p>\r\n          </>\r\n        );\r\n      case \"sandwich\":\r\n        return (\r\n          <>\r\n            <label className=\"label\">\r\n              <b>Slices of bread:</b>\r\n            </label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"number\"\r\n              min=\"1\"\r\n              max=\"12\"\r\n              name=\"slices_of_bread\"\r\n              value={this.state.dishes.slices_of_bread}\r\n              onChange={this.handleForSpecifiedValues}\r\n            />\r\n            <br />\r\n          </>\r\n        );\r\n      default:\r\n        return \"can't found \";\r\n    }\r\n  };\r\n\r\n  getStatesForTypes() {\r\n    switch (this.state.dishes.type) {\r\n      case \"pizza\":\r\n        return {\r\n          name: this.state.dishes.name,\r\n          preparation_time: this.state.dishes.preparation_time,\r\n          type: this.state.dishes.type,\r\n          no_of_slices: this.state.dishes.no_of_slices,\r\n          diameter: this.state.dishes.diameter,\r\n        };\r\n      case \"soup\":\r\n        return {\r\n          name: this.state.dishes.name,\r\n          preparation_time: this.state.dishes.preparation_time,\r\n          type: this.state.dishes.type,\r\n          spiciness_scale: this.state.dishes.spiciness_scale,\r\n        };\r\n      case \"sandwich\":\r\n        return {\r\n          name: this.state.dishes.name,\r\n          preparation_time: this.state.dishes.preparation_time,\r\n          type: this.state.dishes.type,\r\n          slices_of_bread: this.state.dishes.slices_of_bread,\r\n        };\r\n      default:\r\n        return \"can't found \";\r\n    }\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    let dish = this.getStatesForTypes();\r\n\r\n    let piecesOfPizza = dish.no_of_slices;\r\n\r\n    const isDigit = (str) => /^\\d+$/.test(str);\r\n\r\n    if (isDigit(piecesOfPizza)) {\r\n      dish.no_of_slices = parseInt(piecesOfPizza);\r\n    }\r\n    let dishReqestBody = JSON.stringify(dish);\r\n    fetch(\"https://frosty-wood-6558.getsandbox.com:443/dishes\", {\r\n      method: \"post\",\r\n      body: dishReqestBody,\r\n      headers: new Headers({\r\n        \"Content-Type\": \"application/json\",\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          return response.json().then((dishResponse) => {\r\n            this.setState({\r\n              dishResponse: dishResponse,\r\n            });\r\n            this.showTableOrder(dishResponse);\r\n            this.cancelErrorForm();\r\n          });\r\n        }\r\n        if (response.status === 400) {\r\n          return response.json().then((res) => {\r\n            this.showErrorForm(res);\r\n          });\r\n        }\r\n        throw new Error(\"Something went wrong...\");\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }\r\n\r\n  showTableOrder() {\r\n    this.setState({\r\n      visibleOrderTable: true,\r\n    });\r\n  }\r\n\r\n  showErrorForm(res) {\r\n    let error = this.state.error;\r\n    if (res.no_of_slices) {\r\n      error = res.no_of_slices;\r\n    }\r\n    this.setState({\r\n      error,\r\n    });\r\n  }\r\n\r\n  cancelErrorForm() {\r\n    this.setState({\r\n      error: \"\",\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { dishes, dishResponse } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <DishOrderForm\r\n          handleChangeGeneralValues={this.handleChangeGeneralValues}\r\n          getPositionForType={this.getPositionForType}\r\n          handleSubmit={this.handleSubmit}\r\n          preparation_time={dishes.preparation_time}\r\n        />\r\n        {this.state.visibleOrderTable ? (\r\n          <div className=\"container \">\r\n            <div className=\"text-center\">\r\n              <h1 className=\"display-4 captionOrder\">Dishes order:</h1>\r\n            </div>\r\n            <table className=\"table table-striped table-hover table-sm table-responsive-sm col-lg-10 offset-lg-1\">\r\n              <LoginFormListHeader />\r\n              <DishOrderTable dishResponse={dishResponse} />\r\n            </table>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}